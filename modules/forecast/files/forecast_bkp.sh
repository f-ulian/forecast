#!/bin/bash

#===================================================================================
#
# FILE: forecast_bkp.sh
#
# USAGE: bash forecast_bkp.sh
#
# DESCRIPTION: Does the backup of the last day files generated by the Forecast
# Main script named (forecast.sh) and afterwards cleans the directory preparing it
# for the next day, should be run daily. This script retains only the last 10
# days
#
#===================================================================================

# Starting Vars
logFile="/var/log/forecast_bkp.log"
forecastDir="/var/log/forecast/"
timeStamp="$(date +%Y%m%d)_$(date +%H%M)"
bkpTimeStamp="$(date +%m)-$(date +%d)-$(date +%H)-$(date +%M)"
backupDir="/backup/"

verifyDirectories(){
# Ensure Directories
  echo "$timeStamp - Verifying Directories..." >> $logFile
  if [ ! -d $forecastDir ]; then
    echo "$timeStamp - Could not find Forecast Directory: $forecastDir" >> $logFile
    echo "$timeStamp - Please verify Forecast Service" >> $logFile
    exit 1
  fi

  if [ ! -d $backupDir/$bkpTimeStamp ]; then
    mkdir -p $backupDir/$bkpTimeStamp
    if [ $? -ne 0 ]; then
      echo "$timeStamp - Backup Directory Creation Failed: $backupDir/$bkpTimeStamp" >> $logFile
      exit 1
    fi
  fi
}

backupFiles(){
  echo "$timeStamp - Starting Backup..." >> $logFile
# Backup Forecast Files
  tar czf $backupDir/$bkpTimeStamp/forecast.service.tgz -C $forecastDir .
  rm -f $forecastDir/*

# Change Permissions to Root Read Only
  echo "$timeStamp - Changing Permissions..." >> $logFile
  chown root:root -R $backupDir
  chmod 400 -R $backupDir
}

cleanFiles(){
# Clean Backup files older than 10 days
  echo "$timeStamp - Cleaning files older than 10 days" >> $logFile
  find /backup -type d -mtime +10 -exec rm -rf {} \; >> $logFile
}

# Starting Script
verifyDirectories
backupFiles
if [ $? -ne 0 ]; then
  echo "$timeStamp - Backup Failed" >> $logFile
  exit 1
else
  cleanFiles
fi